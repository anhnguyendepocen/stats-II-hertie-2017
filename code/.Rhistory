150/60
?read_csv
library(readr)
source("packages.r")
Sys.setenv("LANGUAGE"="EN")
hey
source("packages.r")
hey
.Library
ls
dsfjkla
source("packages.r")
source("functions.r")
nrow(babynames)
View(babynames)
names(babynames)
unique(babynames$year)
View(babynames)
babynames_byname <- group_by(babynames, name)
?summarize
names(babynames_byname)
babynames_byname_sum <- summarize(babynames_byname, sum(n))
View(babynames_byname_sum)
head(arrange(babynames_byname_sum, desc(total)))
babynames_byname_sum <- summarize(babynames_byname, total = sum(n))
head(arrange(babynames_byname_sum, desc(total)))
library(ggplot2)
babynames %>%
filter(name %>% equals("Kim")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('People named "Kim"')) %>%
print
library(magrittr)
dat <- babynames
dim(dat)
dat_filtered <- filter(dat, name == "Kim")
dat_grouped <- group_by(dat_filtered, year, sex)
dat_sum <- summarize(dat_grouped, total = sum(n))
qplot(year, total, color = sex, data = dat_sum, geom = "line") +
ggtitle('People named "Kim"')
kim_df <- filter(dat, name == "Kim")
kim_grouped <- group_by(kim_df, year, sex)
kim_sum <- summarize(kim_grouped, total = sum(n))
kim_sum
plot(kim_sum$year, kim_sum$total)
plot(kim_sum$year, kim_sum$total, type = "l")
head(kim_sum)
plot(kim_sum$year[kim_sum$sex == "m"], kim_sum$totalkim_sum$year[kim_sum$sex == "m"], type = "l")
plot(kim_sum$year[kim_sum$sex == "M"], kim_sum$totalkim_sum$year[kim_sum$sex == "M"], type = "l")
plot(kim_sum$year[kim_sum$sex == "M"], kim_sum$totalkim_sum$total[kim_sum$sex == "M"], type = "l")
plot(kim_sum$year[kim_sum$sex == "M"], kim_sum$total[kim_sum$sex == "M"], type = "l")
lines(kim_sum$year[kim_sum$sex == "F"], kim_sum$total[kim_sum$sex == "F"], col = "red")
plot(kim_sum$year[kim_sum$sex == "F"], kim_sum$total[kim_sum$sex == "F"], type = "l")
lines(kim_sum$year[kim_sum$sex == "M"], kim_sum$total[kim_sum$sex == "M"], col = "red")
qplot(year, total, color = sex, data = kim_sum, geom = "line") +
ggtitle('People named "Kim"')
qplot(year, total, color = sex, data = kim_sum, geom = "line")
names(babynames)
nrow(babynames)
unique(babynames$year)
babynames_byname <- group_by(babynames, name)
babynames_byname_sum <- summarize(babynames_byname, total = sum(n))
head(arrange(babynames_byname_sum, desc(total)))
kim_df <- filter(dat, name == "Kim")
kim_grouped <- group_by(kim_df, year, sex)
kim_sum <- summarize(kim_grouped, total = sum(n))
plot(kim_sum$year[kim_sum$sex == "F"], kim_sum$total[kim_sum$sex == "F"], type = "l")
lines(kim_sum$year[kim_sum$sex == "M"], kim_sum$total[kim_sum$sex == "M"], col = "red")
qplot(year, total, color = sex, data = kim_sum, geom = "line") # ggplot-style alternative
source("packages.r")
source("functions.r")
head(crime)
wage1
data("wage2")
View(wage2)
wage_model <- lm(wage ~ educ, data = wage1)
summary(wage_model)
1+2
1+2-3+
4
1+2-3+
sum(1, 2)
Sum(1, 2)
log(10)
x <- log(10)
x
x = log(10)
x <- log(10)
3.1415
3,1415
mat <- matrix(c("this", "is", "a", "matrix"), nrow = 2, byrow = TRUE)
mat
mat[1,2]
mat[1,]
mat[,1]
c(1, 2)
mat <- matrix("this", "is", "a", "matrix", nrow = 2, byrow = TRUE)
# - commas are very important when it comes to matrices and data frames: they separate row from column values
hello
# hello
mat <- matrix(c("this", "is", "a", "matrix"), nrow = 2, byrow = TRUE)
browseURL("http://cran.r-project.org/web/packages/")
mat <- matrix(c("this", "is", "a", "matrix"), nrow = 2, byrow = TRUE)
mat[1,2]
mat[1,]
mat[,1]
browseURL("http://cran.r-project.org/web/packages/")
install.packages("readr")
library(readr)
source("packages.r")
browseURL("https://cran.rstudio.com/web/packages/readr/index.html")
?read_csv
wage1 <- read_csv("../data/wage1.csv")
names(wage1)
View(wage1)
?write_csv
write_csv(wage1, na = "NA", path= "../data/wage1-comma.csv")
wage1 <- read_dta("../data/wage1.dta")
head(wage1)
View(wage1)
?wage1
summary(wage1)
summary(wage1$wage)
hist(wage1$wage)
wage1$educ
plot(as.factor(wage1$educ))
plot(as.factor(wage1$educ))
plot(wage1$educ, wage1$wage)
smoothingSpline = smooth.spline(wage1$educ, wage1$wage, spar = 0.3)
lines(smoothingSpline, col = "red")
plot(wage1[,1:5])
model_out <- lm(wage ~ educ + female, data = wage1)
model_out
summary(model_out)
plot(wage1[,1:5])
x <- c(1, 2, 3)
x
x[1]
wage1[,1]
wage1[1,]
wage1[]
library(nycflights13)
?flights
head(flights)
nrow(flights)
table(flights$origin)
flights_sub <- filter(flights, distance < 100)
table(flights_sub$dest)
flights_sub <- filter(flights, month == 1, day == 1, air_time > 60*7)
table(flights_sub$dest)
source("packages.r")
source("functions.r")
data("wage1")
names(wage1)
?qplot
qplot(educ, wage, data = wage1)
cor(wage1$wage, wage1$educ)
with(wage1, cor(educ, wage))
wage_model <- glm(wage ~ educ, data = wage1)
summary(wage_model)
wage_model <- lm(wage ~ educ, data = wage1)
summary(wage_model)
coef(wage_model)
covariance_xy <- with(wage1, cov(wage, educ))
covariance_xy
variance_x <- var(wage1$educ)
variance_x
covariance_xy / variance_x # beta_1
mean(wage1$wage) - (covariance_xy / variance_x)*mean(wage1$educ) # beta_0
wage_model <- lm(wage ~ educ + female, data = wage1)
summary(wage_model)
coef(wage_model)
table(wage1$female)
coef(wage_model)
coef(wage_model)[2]
coef(wage_model)[2] * 10 + coef(wage_model)[3] + coef(wage_model)[1]
wage_model_xz <- lm(educ ~ female, data = wage1)
residuals(wage_model_xz)
resid_xz <- residuals(wage_model_xz)
wage_model_yx <- lm(wage1$wage ~ resid_xz)
coef(wage_model_yx)
summary(wage_model)
wage_model_1 <- lm(wage ~ educ, data = wage1)
wage_model_2 <- lm(wage ~ educ + female, data = wage1)
wage_model_3 <- lm(wage ~ educ + female + nonwhite, data = wage1)
wage_model_4 <- lm(wage ~ educ + female + nonwhite + profocc, data = wage1)
stargazer(wage_model_1, wage_model_2, wage_model_3, wage_model_4, header = FALSE, style = "apsr", type = "html", out = "../output/wage_model_multiple.html")
stargazer(wage_model_1, wage_model_2, wage_model_3, wage_model_4, header = FALSE, style = "apsr", type = "html", out = "../output/wage_model_multiple.html")
ls()
getwd()
stargazer(wage_model_1, wage_model_2, wage_model_3, wage_model_4, header = FALSE, style = "apsr", type = "html", out = "../output/wage_model_multiple.html")
cor(select(wage1, wage, educ, female, nonwhite, profocc))
N <- 500
?rnorm
x <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
d <- .8*x + ed  # d is mediator
ey <- rnorm(N, 0, .5)
y <- x + d + ey
set.seed(42)
N <- 500
x <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
d <- .8*x + ed  # d is mediator
ey <- rnorm(N, 0, .5)
y <- x + d + ey
cor(cbind(y, x, d))
plot(x, y)
summary(lm(d ~ x))
summary(lm(y ~ x))
summary(lm(y ~ x + d))
41.5-36.3
5.2/41.5
45*.125
source("packages.r")
source("packages.r")
source("packages.r")
source("functions.r")
summary(wage_model <- lm(wage ~ exper + tenure, data = wage1))
?wage1
summary(wage_model <- lm(wage ~ exper + tenure, data = wage1))
summary(wage_model <- lm(wage ~ exper + tenure + exper*tenure, data = wage1))
wage1$experXtenure <- wage1$exper * wage1$tenure
View(select(wage1, wage, exper, tenure, experXtenure))
summary(wage_model <- lm(wage ~ exper + tenure + experXtenure, data = wage1))
summary(wage_model <- lm(wage ~ exper*tenure, data = wage1))
summary(wage_model <- lm(wage ~ exper*tenure -tenure, data = wage1))
data("wage1")
table(wage1$edu)
# recode continuous variable to discrete variable
table(wage1$edu)
wage1$educ_cat <- car::recode(wage1$educ, "0:9='low' ;
10:14='medium' ;
15:18='high'",
as.factor.result = TRUE,
levels = c("low", "medium", "high"))
table(wage1$educ_cat)
summary(wage_model <- lm(wage ~ educ_cat*female, data = wage1))
summary(wage_model <- lm(wage ~ educ_cat, data = wage1))
summary(wage_model <- lm(wage ~ educ_cat*female, data = wage1))
library(interplot)
summary(wage_model <- lm(wage ~ exper*tenure, data = wage1))
interplot(m = wage_model, var1 = "exper", var2 = "tenure", hist  = TRUE) +
xlab('Tenure') +
ylab('Estimated coefficient for experience') +
ggtitle('Estimated coefficient of experience\non wage by tenure') +
theme(plot.title = element_text(face='bold'))
# continuous * discrete setup
wage1$woman <- as.factor(wage1$female)
summary(wage_model <- lm(wage ~ exper*woman, data = wage1))
# tenure as mediator
interplot(m = wage_model, var1 = "exper", var2 = "woman") +
xlab('Woman') +
ylab('Estimated coefficient for experience') +
ggtitle('Estimated coefficient of experience\non wage by gender') +
theme(plot.title = element_text(face='bold'))
35.7+22.4+9.5+7.8+9.3+10.8
source("packages.r")
load("/Users/simonmunzert/rkeys.RDa")
MashapeKey <- "4iRXckVxudmshmuVeHLKPAUUMCu6p1cp4iUjsnQO3ipKkD4GSj"
botometerURL <- "https://osome-botometer.p.mashape.com/2/check_account"
Tweetson <- function(x) {
user <- lookup_users(x, token = twitter_token, parse = FALSE)
timeline <- get_timeline(x, token = twitter_token, parse = FALSE, n = 200)
mentions <- search_tweets(x, token = twitter_token, parse = FALSE, n = 100)
payload <- list(timeline = timeline, mentions = mentions, user = user)
payload.json <- toJSON(payload, null = "null", na = "null", pretty = TRUE)
print(payload.json)
write(payload.json, "testload.json")
}
Tweetson("TimK16141864")
library(jsonlite)
library(httr)
library(magrittr)
library(rtweet)
Tweetson("TimK16141864")
load("/Users/simonmunzert/rkeys.RDa")
twitter_token <- TwitterToR_twitterkey
Tweetson("TimK16141864")
twitter_token <- TwitterToR_twittersecret
Tweetson("TimK16141864")
key <- TwitterToR_twitterkey
## api secret (example below is not a real key)
secret <- TwitterToR_twittersecret
twitter_token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret)
load("/Users/simonmunzert/rkeys.RDa")
appname <- "TwitterToR"
## api secret (example below is not a real key)
secret <- TwitterToR_twittersecret
twitter_token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret)
Tweetson("TimK16141864")
