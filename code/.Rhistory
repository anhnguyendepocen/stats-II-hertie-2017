sigma <- sqrt(diag(inv_hess))
sigma
diag(inv_hess)
exp(-0)
exp(-1000)
exp(--10)
source("packages.r")
source("functions.r")
data("turnout") # example dataset from the Zelig package
?turnout
tabyl(turnout$vote)
source("packages.r")
source("functions.r")
tabyl(turnout$vote)
table(turnout$vote)
source("packages.r")
tabyl(turnout$vote)
source("packages.r")
tabyl(turnout$vote)
?glm
logit_out <- glm(vote ~ age + educate + income,
family = binomial, data = turnout)
summary(logit_out)
logit_loglik <- function(theta, y, X){
b <- theta
logl <- sum(-y*log(1+exp(- X %*% b)) # for y = 1
- (1-y)*log(1+exp(X %*% b))) # for y = 0
return(-logl)
}
logit_out_manual <- optim(rep(1,4), logit_loglik, y = turnout$vote, X = as.matrix(cbind(1,(turnout[,c("age", "educate", "income")]))), method = "BFGS")
logit_out_manual
summary(probit_out) # careful - the coefficients are not directly comparable with those from the logit model! (Divide logit coefficients by approximately 1.6 to arrive at probit coefficients; see http://andrewgelman.com/2006/06/06/take_logit_coef/)
probit_out <- glm(vote ~ age + educate + income,
family = binomial(link = "probit"), data = turnout)
summary(probit_out) # careful - the coefficients are not directly comparable with those from the logit model! (Divide logit coefficients by approximately 1.6 to arrive at probit coefficients; see http://andrewgelman.com/2006/06/06/take_logit_coef/)
# again, a little simulation
n <- 100
x <- rnorm (n)
a <- 1.5
b <- 1
y <- rbinom (n, 1, invlogit(a + b*x))
M1 <- glm (y ~ x, family=binomial(link="logit"))
summary (M1)
M2 <- glm(y ~ x, family=binomial(link="probit"))
summary (M2)
logit_out_empty <- glm(vote ~ 1, family = binomial, data = turnout) # estimate empty model
summary(logit_out_empty)
Pseudo_R2 <- 1 - (as.numeric(logLik(logit_out)))/(as.numeric(logLik(logit_out_empty)))
Pseudo_R2
turnout$vote_pred_link <- predict(logit_out, type = "link")
turnout$vote_pred_link#
turnout$vote_pred_prob <- predict(logit_out, type = "response")
turnout$vote_pred_prob
hist(turnout$vote_pred_prob)
turnout$vote_pred <- ifelse(turnout$vote_pred_prob > .5, 1, 0)
plot(turnout$vote_pred_link, turnout$vote_pred_prob) # links versus response
tab <- table(turnout$vote, turnout$vote_pred)
colnames(tab) <- c("pred vote NO", "pred vote YES")
rownames(tab) <- c("rep vote NO", "rep vote YES")
tab
sum(turnout$vote_pred == 1 & turnout$vote == 1) / sum(turnout$vote_pred == 1)
sum(turnout$vote_pred == 1 & turnout$vote == 1) / sum(turnout$vote == 1)
summary(logit_out)
cbind(log_odds <- round(coef(logit_out), 4),
odds_ratios <- round(exp(coef(logit_out)), 4),
probabilities <- round(1/(1+exp(-coef(logit_out))), 4))
library(margins)
summary(logit_out)
margins(logit_out, type = "link") # this equals the log odds
margins(logit_out, type = "response") # this equals marginal probabilities
margins(logit_out, at = list(age = c(25, 60),
educate = c(10, 10),
income = c(3, 3)))
marginal_effects(logit_out) # unit-specific marginal effects with respect to all variables
df <- data.frame(age = min(turnout$age):max(turnout$age), educate = 10, income = 4)
model_preds <- predict(logit_out, newdata = df, type = 'response', se.fit = TRUE)
df$prediction <- model_preds$fit
df$lower <- model_preds$fit - 1.96 * model_preds$se.fit
df$upper <- model_preds$fit + 1.96 * model_preds$se.fit
ggplot(df) + geom_line(aes(x = age, y = prediction)) + theme_bw() + geom_ribbon(aes(ymin = lower, ymax = upper, x = age), alpha = .3)
cplot(logit_out, "age")
cplot(logit_out, "age", what = "effect")
3200+2800
source("packages.r")
source("functions.r")
workmom <- read.csv("../data/ordwarm2.csv", header=TRUE, sep=",")
workmom$warmf <- factor(workmom$warm, labels=c("Strongly Disagree",
"Disagree",
"Agree",
"Strongly Agree"))
workmom77 <- workmom[workmom$yr89==0, ]
workmom89 <- workmom[workmom$yr89==1, ]
table(workmom77$warmf)
workmom77 %>% group_by(male) %>% summarize(warm = mean(warm == 3 | warm == 4)) # agree or strongly agree
workmom77 %>% group_by(white) %>% summarize(warm = mean(warm == 3 | warm == 4)) # agree or strongly agree
workmom77 %>% group_by(age > 60) %>% summarize(warm = mean(warm == 3 | warm == 4)) # agree or strongly agree
warm77_olog <- polr(warmf ~ male + white + age + ed + prst, data = workmom77, method = "logistic", na.action = na.omit)
summary(warm77_olog)
predict_class <- predict(warm77_olog, type = "class")
predict_class
predict_probs <- predict(warm77_olog, type = "probs")
predict_probs <- predict(warm77_olog, type = "probs")
head(predict_probs)
table(predict_class, workmom77$warmf)
warm77_olog$coefficients
warm77_olog$zeta
pnorm(warm77_olog$zeta[1], mean = sum(warm77_olog$coefficients * c(1, 1, 25, 15, .8)), sd = 1)
predict(warm77_olog, newdata = data.frame(male = 1, white = 1, age = 25, ed = 15, prst = .8), type = "probs") # single case
warm77_olog <- polr(warmf ~ male + white + age + ed + prst, data = workmom77, method = "probit", na.action = na.omit)
predict(warm77_olog, newdata = data.frame(male = 1, white = 1, age = 25, ed = 15, prst = .8), type = "probs") # single case
pnorm(warm77_olog$zeta[1], mean = sum(warm77_olog$coefficients * c(1, 1, 25, 15, .8)), sd = 1)
pnorm(warm77_olog$zeta[2], mean = sum(warm77_olog$coefficients * c(1, 1, 25, 15, .8)), sd = 1) -
pnorm(warm77_olog$zeta[1], mean = sum(warm77_olog$coefficients * c(1, 1, 25, 15, .8)), sd = 1)
predict_class <- predict(warm77_olog, type = "class")
predict_class
predict_probs <- predict(warm77_olog, type = "probs")
head(predict_probs)
predict_class[1:6]
table(predict_class, workmom77$warmf)
# run model
z_out <- zelig(warmf ~ male + white + age + ed + prst, data = workmom77, model = "ologit")
summary(z_out)
# simulate probabilities
male_yes <- setx(z_out, male = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
male_no <- setx(z_out, male = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_yes <- setx(z_out, white = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_no <- setx(z_out, white = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_25 <- setx(z_out, age = 25) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_65 <- setx(z_out, age = 65) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_low <- setx(z_out, ed = 8) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_high <- setx(z_out, ed = 18) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
# get summary statistics
get_summary <- function(x) {
out <- matrix(ncol = 3, nrow = 4)
out[,1] <- colMeans(x)
out[,2] <- apply(x, 2, quantile, .05)
out[,3] <- apply(x, 2, quantile, .90)
out <- as.data.frame(out)
names(out) <- c("mean", "ci90lo", "ci90hi")
out
}
sims_list <- list(male_yes, male_no, white_yes, white_no, age_25, age_65, edu_low, edu_high)
sims_sum_list <- list()
for (i in 1:length(sims_list)) {
sims_sum_list[[i]] <- get_summary(sims_list[[i]])
}
labels <- c("Male", "Female", "White", "Nonwhite", "Age = 25", "Age = 65", "Education = low", "Education = high")
sd_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean1"]
d_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean2"]
a_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean3"]
sa_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean4"]
sd_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo1"]
d_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo2"]
a_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo3"]
sa_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo4"]
sd_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi1"]
d_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi2"]
a_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi3"]
sa_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi4"]
sd_sims_sum <- sapply(sims_sum_list, `[`, 1,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
d_sims_sum <- sapply(sims_sum_list, `[`, 2,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
a_sims_sum <- sapply(sims_sum_list, `[`, 3,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
sa_sims_sum <- sapply(sims_sum_list, `[`, 4,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
# generate plot
par(mfrow=c(4, 1))
par(mar=c(2, 8, 2, 1))
# strongly disagree
plot(sd_sims_sum$mean, seq_along(sd_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly disagree'")
for (i in seq_along(sd_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sd_sims_sum$ci90lo[i], x1 = sd_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sd_sims_sum$mean), labels = labels[order(sd_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# disagree
plot(d_sims_sum$mean, seq_along(d_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Disagree'")
for (i in seq_along(d_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = d_sims_sum$ci90lo[i], x1 = d_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(d_sims_sum$mean), labels = labels[order(d_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# agree
plot(a_sims_sum$mean, seq_along(a_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Agree'")
for (i in seq_along(a_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = a_sims_sum$ci90lo[i], x1 = a_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(a_sims_sum$mean), labels = labels[order(a_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# strongly agree
plot(sa_sims_sum$mean, seq_along(sa_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly agree'")
for (i in seq_along(sa_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sa_sims_sum$ci90lo[i], x1 = sa_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sa_sims_sum$mean), labels = labels[order(sa_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
z_out <- zelig(warmf ~ male + white + age + ed + prst, data = workmom77, model = "ologit")
library(ZeligChoice)
# run model
z_out <- zelig(warmf ~ male + white + age + ed + prst, data = workmom77, model = "ologit")
summary(z_out)
# simulate probabilities
male_yes <- setx(z_out, male = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
male_no <- setx(z_out, male = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_yes <- setx(z_out, white = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_no <- setx(z_out, white = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_25 <- setx(z_out, age = 25) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_65 <- setx(z_out, age = 65) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_low <- setx(z_out, ed = 8) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_high <- setx(z_out, ed = 18) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
# get summary statistics
get_summary <- function(x) {
out <- matrix(ncol = 3, nrow = 4)
out[,1] <- colMeans(x)
out[,2] <- apply(x, 2, quantile, .05)
out[,3] <- apply(x, 2, quantile, .90)
out <- as.data.frame(out)
names(out) <- c("mean", "ci90lo", "ci90hi")
out
}
sims_list <- list(male_yes, male_no, white_yes, white_no, age_25, age_65, edu_low, edu_high)
sims_sum_list <- list()
for (i in 1:length(sims_list)) {
sims_sum_list[[i]] <- get_summary(sims_list[[i]])
}
labels <- c("Male", "Female", "White", "Nonwhite", "Age = 25", "Age = 65", "Education = low", "Education = high")
sd_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean1"]
d_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean2"]
a_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean3"]
sa_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean4"]
sd_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo1"]
d_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo2"]
a_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo3"]
sa_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo4"]
sd_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi1"]
d_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi2"]
a_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi3"]
sa_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi4"]
sd_sims_sum <- sapply(sims_sum_list, `[`, 1,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
d_sims_sum <- sapply(sims_sum_list, `[`, 2,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
a_sims_sum <- sapply(sims_sum_list, `[`, 3,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
sa_sims_sum <- sapply(sims_sum_list, `[`, 4,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
# generate plot
par(mfrow=c(4, 1))
par(mar=c(2, 8, 2, 1))
# strongly disagree
plot(sd_sims_sum$mean, seq_along(sd_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly disagree'")
for (i in seq_along(sd_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sd_sims_sum$ci90lo[i], x1 = sd_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sd_sims_sum$mean), labels = labels[order(sd_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# disagree
plot(d_sims_sum$mean, seq_along(d_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Disagree'")
for (i in seq_along(d_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = d_sims_sum$ci90lo[i], x1 = d_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(d_sims_sum$mean), labels = labels[order(d_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# agree
plot(a_sims_sum$mean, seq_along(a_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Agree'")
for (i in seq_along(a_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = a_sims_sum$ci90lo[i], x1 = a_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(a_sims_sum$mean), labels = labels[order(a_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# strongly agree
plot(sa_sims_sum$mean, seq_along(sa_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly agree'")
for (i in seq_along(sa_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sa_sims_sum$ci90lo[i], x1 = sa_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sa_sims_sum$mean), labels = labels[order(sa_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
z_out <- zelig(warmf ~ male + white + age + ed + prst, data = workmom77, model = "ologit")
summary(z_out)
male_yes <- setx(z_out, male = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
library(magrittr)
# run model
z_out <- zelig(warmf ~ male + white + age + ed + prst, data = workmom77, model = "ologit")
summary(z_out)
# simulate probabilities
male_yes <- setx(z_out, male = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
male_no <- setx(z_out, male = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_yes <- setx(z_out, white = 1) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
white_no <- setx(z_out, white = 0) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_25 <- setx(z_out, age = 25) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
age_65 <- setx(z_out, age = 65) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_low <- setx(z_out, ed = 8) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
edu_high <- setx(z_out, ed = 18) %>% sim(z_out, x = .) %>% extract2("sim.out") %>% extract2("x") %>% extract2("ev") %>% extract2(1) %>% as.data.frame
# get summary statistics
get_summary <- function(x) {
out <- matrix(ncol = 3, nrow = 4)
out[,1] <- colMeans(x)
out[,2] <- apply(x, 2, quantile, .05)
out[,3] <- apply(x, 2, quantile, .90)
out <- as.data.frame(out)
names(out) <- c("mean", "ci90lo", "ci90hi")
out
}
sims_list <- list(male_yes, male_no, white_yes, white_no, age_25, age_65, edu_low, edu_high)
sims_sum_list <- list()
for (i in 1:length(sims_list)) {
sims_sum_list[[i]] <- get_summary(sims_list[[i]])
}
labels <- c("Male", "Female", "White", "Nonwhite", "Age = 25", "Age = 65", "Education = low", "Education = high")
sd_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean1"]
d_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean2"]
a_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean3"]
sa_mean <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "mean4"]
sd_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo1"]
d_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo2"]
a_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo3"]
sa_ci90lo <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90lo4"]
sd_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi1"]
d_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi2"]
a_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi3"]
sa_ci90hi <- unlist(sims_sum_list)[names(unlist(sims_sum_list)) == "ci90hi4"]
sd_sims_sum <- sapply(sims_sum_list, `[`, 1,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
d_sims_sum <- sapply(sims_sum_list, `[`, 2,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
a_sims_sum <- sapply(sims_sum_list, `[`, 3,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
sa_sims_sum <- sapply(sims_sum_list, `[`, 4,) %>% t  %>% apply(2, as.numeric) %>% as.data.frame %>% arrange(mean)
# generate plot
par(mfrow=c(4, 1))
par(mar=c(2, 8, 2, 1))
# strongly disagree
plot(sd_sims_sum$mean, seq_along(sd_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly disagree'")
for (i in seq_along(sd_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sd_sims_sum$ci90lo[i], x1 = sd_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sd_sims_sum$mean), labels = labels[order(sd_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# disagree
plot(d_sims_sum$mean, seq_along(d_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Disagree'")
for (i in seq_along(d_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = d_sims_sum$ci90lo[i], x1 = d_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(d_sims_sum$mean), labels = labels[order(d_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# agree
plot(a_sims_sum$mean, seq_along(a_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Agree'")
for (i in seq_along(a_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = a_sims_sum$ci90lo[i], x1 = a_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(a_sims_sum$mean), labels = labels[order(a_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
# strongly agree
plot(sa_sims_sum$mean, seq_along(sa_sims_sum$mean), xlim = c(0, .5), ylim = c(.5, 8.5), pch = 19, xlab = "", ylab = "", yaxt = "n", main = "Probability 'Strongly agree'")
for (i in seq_along(sa_sims_sum$mean)) {
segments(y0 = i, y1 = i, x0 = sa_sims_sum$ci90lo[i], x1 = sa_sims_sum$ci90hi[i])
}
axis(2, at = seq_along(sa_sims_sum$mean), labels = labels[order(sa_mean)], las = 1)
abline(v=seq(0,1,.1), lty = 2, col = "grey")
gator <- read_csv("../data/alligator.csv") # data example from Agresti (2002)
model_out <- multinom(food ~ size + female, data = gator)
model_out <- multinom(food ~ size + female, data = gator)
library(nnet) # for multinom()
model_out <- multinom(food ~ size + female, data = gator)
summary(model_out)
stargazer(model_out, type="text")
exp(-2.53)
exp(-2.53 - 0.13)
exp(0 - 0.13)
predict_out <- predict(model_out, type = "probs") %>% as.data.frame()
names(predict_out) <- c("prob_fish", "prob_invert", "prob_other")
head(predict_out)
rowSums(predict_out)
names(predict_out) <- c("prob_fish", "prob_invert", "prob_other")
gator_pred <- cbind(gator, predict_out)
par(oma=c(0,0,0,0))
par(mar=c(5,5,1.5,.5))
dat_male <- filter(gator_pred, female == 0) %>% arrange(prob_fish)
plot(dat_male$size, dat_male$prob_fish, type = "l", ylim = c(0, 1), col = "blue", main = "Male alligators", ylab = "Probability primary diet is...", xlab = "Size of alligator (meters)")
lines(dat_male$size, dat_male$prob_invert, col = "red")
lines(dat_male$size, dat_male$prob_other, col = "brown")
text(1.5, dat_male$prob_fish[1]+.1, "Fish", col = "blue")
text(1.5, dat_male$prob_invert[1]+.1, "Invertebrates", col = "red")
text(1.5, dat_male$prob_other[1]+.1, "Other", col = "brown")
dev.off()
par(oma=c(0,0,0,0))
par(mar=c(5,5,1.5,.5))
dat_male <- filter(gator_pred, female == 0) %>% arrange(prob_fish)
plot(dat_male$size, dat_male$prob_fish, type = "l", ylim = c(0, 1), col = "blue", main = "Male alligators", ylab = "Probability primary diet is...", xlab = "Size of alligator (meters)")
lines(dat_male$size, dat_male$prob_invert, col = "red")
lines(dat_male$size, dat_male$prob_other, col = "brown")
text(1.5, dat_male$prob_fish[1]+.1, "Fish", col = "blue")
text(1.5, dat_male$prob_invert[1]+.1, "Invertebrates", col = "red")
text(1.5, dat_male$prob_other[1]+.1, "Other", col = "brown")
# ZeligChoice package allows to simulate outcomes from a variety of logit and probit models (add-on to Zelig package)
library(ZeligChoice)
gator$food2 <- car::recode(gator$food, "1=3;3=1") # last category is base category in zelig(); we want to keep order from above
z_out <- zelig(food2 ~ size + female, model = "mlogit", data = gator)
summary(z_out)
# set contrasts on size variable
size_small <- setx(z_out, size = 1.5)
size_big <- setx(z_out, size = 3.5)
# simulate predicted probabilities
s_out <- sim(z_out, x = size_small, x1 = size_big)
s_out
#plot(s_out)
# extract first differences, summary statistics
sim_out_fd <- s_out$sim.out$x1$fd[[1]] %>% as.data.frame()
names(sim_out_fd) <- c("prob_other", "prob_invert", "prob_fish")
sim_out_summary <-
summarize(sim_out_fd, fish_mean = mean(prob_fish),
fish_95lo = quantile(prob_fish, .025),
fish_95hi = quantile(prob_fish, .975),
invert_mean = mean(prob_invert),
invert_95lo = quantile(prob_invert, .025),
invert_95hi = quantile(prob_invert, .975),
other_mean = mean(prob_other),
other_95lo = quantile(prob_other, .025),
other_95hi = quantile(prob_other, .975)
)
sim_out_summary
par(oma=c(0,0,0,0))
par(mar=c(5, 7, 2, 1))
plot(sim_out_summary$fish_mean, 3, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19, xlab = "Difference in probability\nthis is Alligator's primary diet", ylab = "", yaxt = "n", main = "Large alligators (3.5 meters) compared to small (1.5 meters)")
points(sim_out_summary$invert_mean, 2, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19)
points(sim_out_summary$other_mean, 1, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19)
segments(y0 = 3, y1 = 3, x0 = sim_out_summary$fish_95lo, x1 = sim_out_summary$fish_95hi)
segments(y0 = 2, y1 = 2, x0 = sim_out_summary$invert_95lo, x1 = sim_out_summary$invert_95hi)
segments(y0 = 1, y1 = 1, x0 = sim_out_summary$other_95lo, x1 = sim_out_summary$other_95hi)
axis(2, at = c(3, 2, 1), labels = c("Fish", "Invertebrates", "Other food"), las = 1)
abline(v=0)
abline(v=seq(-1,1,.25), lty = 2)
par(oma=c(0,0,0,0))
par(mar=c(5,5,1.5,.5))
dat_male <- filter(gator_pred, female == 0) %>% arrange(prob_fish)
plot(dat_male$size, dat_male$prob_fish, type = "l", ylim = c(0, 1), col = "blue", main = "Male alligators", ylab = "Probability primary diet is...", xlab = "Size of alligator (meters)")
lines(dat_male$size, dat_male$prob_invert, col = "red")
lines(dat_male$size, dat_male$prob_other, col = "brown")
text(1.5, dat_male$prob_fish[1]+.1, "Fish", col = "blue")
text(1.5, dat_male$prob_invert[1]+.1, "Invertebrates", col = "red")
text(1.5, dat_male$prob_other[1]+.1, "Other", col = "brown")
par(oma=c(0,0,0,0))
par(mar=c(5, 7, 2, 1))
plot(sim_out_summary$fish_mean, 3, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19, xlab = "Difference in probability\nthis is Alligator's primary diet", ylab = "", yaxt = "n", main = "Large alligators (3.5 meters) compared to small (1.5 meters)")
points(sim_out_summary$invert_mean, 2, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19)
points(sim_out_summary$other_mean, 1, xlim = c(-1, 1), ylim = c(.5, 3.5), pch = 19)
segments(y0 = 3, y1 = 3, x0 = sim_out_summary$fish_95lo, x1 = sim_out_summary$fish_95hi)
segments(y0 = 2, y1 = 2, x0 = sim_out_summary$invert_95lo, x1 = sim_out_summary$invert_95hi)
segments(y0 = 1, y1 = 1, x0 = sim_out_summary$other_95lo, x1 = sim_out_summary$other_95hi)
axis(2, at = c(3, 2, 1), labels = c("Fish", "Invertebrates", "Other food"), las = 1)
abline(v=0)
abline(v=seq(-1,1,.25), lty = 2)
table(gator$food)
set.seed(42)
N <- 500
x1 <- rnorm(N, 0, 1)
x2 <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
x1 <- .5*x2 + ed
ey <- rnorm(N, 0, .5)
y <- x1 + x2 + ey
cor(cbind(y, x1, x2))
plot(x1, y)
plot(x2, y)
summary(lm(y ~ x1 + x2))
summary(lm(x1 ~ x2))
summary(lm(y ~ x1))
set.seed(42)
N <- 500
x1 <- rnorm(N, 0, 1)
x2 <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
x1 <- .5*x2 + ed
ey <- rnorm(N, 0, .5)
y <- x1 + .5x2 + ey
cor(cbind(y, x1, x2))
plot(x1, y)
plot(x2, y)
# complete "true" models
summary(lm(x1 ~ x2))
summary(lm(y ~ x1 + x2))
# model with omitted variable
summary(lm(y ~ x1))
set.seed(42)
N <- 500
x1 <- rnorm(N, 0, 1)
x2 <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
x1 <- .5*x2 + ed
ey <- rnorm(N, 0, .5)
y <- x1 + .5*x2 + ey
cor(cbind(y, x1, x2))
plot(x1, y)
plot(x2, y)
# complete "true" models
summary(lm(x1 ~ x2))
summary(lm(y ~ x1 + x2))
# model with omitted variable
summary(lm(y ~ x1))
set.seed(42)
N <- 500
x1 <- rnorm(N, 0, 1)
x2 <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
x1 <- -.5*x2 + ed
ey <- rnorm(N, 0, .5)
y <- x1 + .5*x2 + ey
set.seed(42)
N <- 500
x1 <- rnorm(N, 0, 1)
x2 <- rnorm(N, 0, 1)
ed <- rnorm(N, 0, .5)
x1 <- -.5*x2 + ed
ey <- rnorm(N, 0, .5)
y <- x1 + x2 + ey
summary(lm(x1 ~ x2))
summary(lm(y ~ x1 + x2))
summary(lm(y ~ x1))
summary(lm(y ~ x2))
summary(lm(y ~ x1))
summary(lm(y ~ x1 + x2))
